<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<beans profile="test">

		<bean id="viewResolver"
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix">
				<value>/WEB-INF/views/</value>
			</property>
			<property name="suffix">
				<value>.jsp</value>
			</property>
		</bean>

		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName"
				value="${hibernate.driverClassName}" />
			<property name="url"
				value="${hibernate.url}" />
			<property name="username" value="${hibernate.username}" />
			<property name="password" value="${hibernate.password}" />
		</bean>

		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="packagesToScan"
				value="com.seatmanagement.model"></property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
					<prop key="hibernate.dialect">${hibernate.dialect}</prop>
					<!-- <prop key="hibernate.show_sql">true</prop> -->
					<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				</props>
			</property>
		</bean>

		<bean id="hibernateTemplate"
			class="org.springframework.orm.hibernate5.HibernateTemplate">
			<property name="sessionFactory" ref="sessionFactory"></property>
		</bean>

		<bean id="transaction"
			class="org.springframework.orm.hibernate5.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory" />
		</bean>

		<tx:annotation-driven
			transaction-manager="transaction" />

		<bean id="buildingService"
			class="com.seatmanagement.service.impl.BuildingServiceImpl">
		</bean>

	<bean id="floorDao" name="floorDao"
			class="org.mockito.Mockito" factory-method="mock">
			<constructor-arg
				value="com.seatmanagement.dao.impl.FloorDaoImpl" />
		</bean>

		<bean id="floorService"
			class="com.seatmanagement.service.impl.FloorServiceImpl">
		</bean>


		<bean id="blockDao"
			class="com.seatmanagement.dao.impl.BlockDaoImpl">
		</bean>

		<bean id="blockService"
			class="com.seatmanagement.service.impl.BlockServiceImpl">
		</bean>

		<bean id="utilitiesDao"
			class="com.seatmanagement.dao.impl.UtilitiesDaoImpl">
		</bean>

		<bean id="utilitiesService"
			class="com.seatmanagement.service.impl.UtilitiesServiceImpl">
		</bean>

		<bean id="systemDao"
			class="com.seatmanagement.dao.impl.SystemDaoImpl">
		</bean>

		<bean id="systemService"
			class="com.seatmanagement.service.impl.SystemServiceImpl">
		</bean>

		<bean id="seatingDetailsDao" name="seatingDetailsDao"
			class="org.mockito.Mockito" factory-method="mock">
			<constructor-arg
				value="com.seatmanagement.dao.impl.SeatingDetailsDaoImpl" />
		</bean>

		<bean id="seatingDetailsService"
			class="com.seatmanagement.service.impl.SeatingDetailsServiceImpl">
		</bean>

		<bean id="genericDao" name="genericDao"
			class="org.mockito.Mockito" factory-method="mock">
			<constructor-arg
				value="com.seatmanagement.dao.impl.GenericDaoImpl" />
		</bean>

		<bean id="additionalDeviceService"
			class="com.seatmanagement.service.impl.AdditionalDeviceServiceImpl">
		</bean>

		<bean id="teamService"
			class="com.seatmanagement.service.impl.TeamServiceImpl">
		</bean>

		<bean id="teamDao"
			class="com.seatmanagement.dao.impl.TeamDaoImpl">
		</bean>

		<bean id="reallocationService"
			class="com.seatmanagement.service.impl.ReallocationServiceImpl">
		</bean>

		<bean id="reallocationDao" name="reallocationDao"
			class="org.mockito.Mockito" factory-method="mock">
			<constructor-arg
				value="com.seatmanagement.dao.impl.ReallocationDaoImpl" />
		</bean>
	<bean id="blockDaoMock" name="blockDaoMock" class="org.mockito.Mockito" factory-method="mock">
 	       <constructor-arg value="com.seatmanagement.dao.impl.BlockDaoImpl"/>
  		</bean> 
		<bean id="organisationService"
			class="com.seatmanagement.service.impl.OrganisationServiceImpl">
		</bean>

		<bean id="seatingService"
			class="com.seatmanagement.service.impl.SeatingServiceImpl">
		</bean>

		<bean id="seatingDao" name="seatingDao"
			class="org.mockito.Mockito" factory-method="mock">
			<constructor-arg
				value="com.seatmanagement.dao.impl.SeatingDaoImpl" />
		</bean>

		<bean id="employeeService"
			class="com.seatmanagement.service.impl.EmployeeServiceImpl">
		</bean>

		<bean id="employeeDao"
			class="com.seatmanagement.dao.impl.EmployeeDaoImpl">
		</bean>

		<bean id="dashboardService"
			class="com.seatmanagement.service.impl.DashboardServiceImpl">
		</bean>

		<bean id="globalValidator"
			class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

		<bean id="organisationDao"
			class="com.seatmanagement.dao.impl.OrganisationDaoImpl">
		</bean>

		<!-- Autowire Test Beans -->
		<bean class="com.seatmanagement.model.AutowireTestModel">
			<property name="name">
				<value>autowiredByType</value>
			</property>
		</bean>

		<bean id="byName"
			class="com.seatmanagement.model.AutowireTestModel">
			<property name="name">
				<value>autowiredByName</value>
			</property>
		</bean>

	</beans>

</beans>